__NOEDITSECTION__ __NOTOC__ {{Developer Manual Navigator|chapter=Environment}}

The '''Wiki Automation Tool''' simplifies creation and maintenance of the Wiki content by automatically generating '''Application Pages''' from the '''Wiki Model'''.
Generated pages are automatically deployed to the '''MediaWiki Server''' and allow user to add, modify, view and search data for all defined '''Concepts'''.

{{#tag:graphviz | digraph "Wiki Automation Tool Overview" {
rankdir=LR;
newrank=true;
nodesep=0.3;
compound=true;

node [style="filled" fillcolor="#f9f9f9" color="#333333" shape = "box" fontname="Arial" fontsize=8 width="0.03" height="0.03"];
edge [color="#333333" arrowhead="normal" fontname="Arial" fontsize=8 fontcolor="#333333"];</noinclude>

subgraph clusterDesign {label = "Design" style=dotted
	nodeSchema [ label = "Wiki Model Schema\n (xsd)" URL="{{fullurl:Help:Schema}}"];
	nodeWikiModel [ label = "Wiki Model\n (xml)" URL="{{fullurl:Project:Wiki_Model}}"];
};

subgraph clusterWat {label = "Wiki Automation Tool" style=dotted color="brown"
  nodeGenerator [ label = "Command Line Tool" fillcolor="#C6D729" shape="component" URL="{{fullurl:Help:Wiki_Automation_Tool}}"];
  nodeCodeCache [ label = "Source Code\n Cache" fillcolor="#FFCC00"];
  nodeConfigurationFile [ label = "Configuration File" fillcolor="#FFCC00"];
};

subgraph clusterRuntime {label = "Run-time" style=dotted
	nodeSoftware [ label = "Application Pages" URL="{{fullurl:Project:Software}}"];
	nodeMediaWiki [ label = "Wiki instance" URL="{{fullurl:Special:Version}}"];
  nodeJobQueue [ label = "MediaWiki Job Queue" fillcolor="#FFCC00"];
};

{rank=same nodeSchema nodeWikiModel}
{rank=same nodeGenerator nodeCodeCache nodeConfigurationFile}
{rank=same  nodeSoftware nodeMediaWiki}

nodeSchema -> nodeWikiModel[ label = "defines format of"];
nodeWikiModel ->nodeGenerator [ label = "is read by"];
nodeGenerator ->nodeSoftware  [ label = "generates"];
nodeGenerator ->nodeMediaWiki  [ label = "deploys to"];
nodeSoftware ->nodeMediaWiki  [ label = "runs on"];
nodeGenerator -> nodeCodeCache [ label = "caches generated pages in" ];
nodeConfigurationFile -> nodeGenerator [ label = "defines \nconfiguration options \nfor" ];
nodeMediaWiki -> nodeJobQueue [ label = "schedules \nmaintenance \ntasks in" ]

} | format="png" | renderer="dot" }}

The Wiki Automation Tool provides a '''Command Line Tool''', which takes as an input the '''Wiki Model''' (the xml file with detailed definition of desired '''Data Model'''), generates required application pages, and deploys generated code to the server.
Only files which were changed since the last generator run are being sent to the server (newly generated pages are compared with the content of a local '''Source Code Cache''',
which content is updated after pages are sent to the server).

While processing deployed pages, the MediaWiki Server schedules some additional maintenance tasks in the '''MediaWiki Job Queue'''
(e.g. to update links between pages, to update statistics, to refresh related pages (pages which transclude modified pages)).
The queue is usually processed by the Server in its spare time (in normal conditions it might take hours).
It is critical that these tasks are processed before any further actions are performed.
That is why Wiki Automation Tool after each deployment enforces processing of all pending tasks in the Job Queue.

<div style="clear:both"></div>

= Installation =
The Wiki Automation Tool might be used on:
* machine with the Wiki Platform installed through the TEAM installation scripts
* local development machine (Ubuntu and Mac OS X were successfully used).


==Wiki Platform==

The Wiki Automation Tool (and all its required dependencies) is installed as a part of the Wiki Platform and is available in the ''$TEAM/MDA'' folder.
See [[Help:Wiki Platform|Wiki Platform]] for more details.


==Local Development Machine==

* install git, python 2.7, pip
{| class="wikitable"
|-
! Ubuntu
! Mac OS X
|-
| <pre>
  sudo apt-get install -y git-core
  sudo apt-get install -y python-dev
  sudo apt-get install -y python-pip
  sudo apt-get install -y python-lxml
  sudo pip install --upgrade pip
</pre>
|
<pre>
  # python 2.7 is installed as a part of Mac OSX
  # install XCode Command Line Tools (e.g. type 'git'
  #   and follow instructions in the popup window)
  curl -0 https://bootstrap.pypa.io/get-pip.py
  sudo python get-pip.py
</pre>
|}
* install required python modules
<pre>
  sudo pip install rdflib
  sudo pip install reportlab
  sudo pip install openpyxl
  sudo pip install nltk
  sudo pip install airspeed
  sudo pip install lxml
 	sudo pip install poster
 </pre>

* clone TEAM source code repository ($TEAM folder might be located anywhere in the local file system)
<pre>
  cd $TEAM
  git clone https://github.com/goossens/Wikis.git
</pre>

* Wiki Automation Tool is available in the $TEAM/MDA folder


= Configuration =
The Wiki Automation Tool is configured through the '''LocalSettings.py'' file located in the '$TEAM/Data' folder.

The file should define the following properties:
<pre>
url = "$WIKI_URL"        # (e.g. "https://tide.act.nato.int/"  or "http://192.168.20.11/")
user = "$USERNAME"       # (e.g. "robot", "wikiauto")
password = "$PASSWORD"
</pre>

Note that the $USERNAME account should have bureaucrat privileges in the target Wiki instance.


= Command Line Tool =
The command line tool is provided as the '''wat.sh''' script located in $TEAM/MDA folder:

Go to the project main folder (where model.xml file is) and run ../MDA/wat.sh script.

<pre>
usage: wat.sh [-h] [--model MODEL] [--folder FOLDER]
                             [--wiki WIKI] [--clearCache] [--refreshWiki]

optional arguments:
  -h, --help       show this help message and exit
  --model MODEL    the path to WikiModel file (default: model.xml in current
                   folder)
  --folder FOLDER  folder where to generate files (default: {FOLDER WITH MODEL
                   FILE}/../Data/{WIKI NAME})
  --wiki WIKI      the id of the wiki where to deploy generated code
  --clearCache     to clear the cache with generated pages. This enforce Wiki
                   Automation Tool to deploy all generated pages to the server
                   (even if they were not changed since last generation run).
  --refreshWiki    to purge all generated pages on the MediaWiki server. This
                   enforces MediaWiki server to reprocess all generated pages.
                   This option is recommended after the first deployment to
                   the new server
</pre>

=Application Pages=
Every Application Page update is automatically commented. The comment provides the following information:
* current version of the Wiki Automation Tool,
* current version of the Wiki Model.

This information is available on the ''View history'' pages and has the following format: "WAT {WAT VERSION}, Model {MODEL Version}".


<headertabs />
